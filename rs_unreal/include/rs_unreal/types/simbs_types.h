/*
 * This file was generated by generate_typesystem.py.
 * Filename:    simbs_types
 * Name:        simbs
 * Description: No description given
 * Version:     1.0
 * Vendor:      None
 */
#ifndef __SIMBS_TYPES_H__
#define __SIMBS_TYPES_H__

#include <rs/feature_structure_proxy.h>
#include <rs_unreal/types/type_definitions.h>
#include <rs/types/core_types.h>
#include <rs/types/cv_types.h>
#include <rs/types/pcl_types.h>

namespace rs_unreal
{

/*
 * Data from the internal belief state that corresponds to an object hypothesis
 */
class SimBeliefStateObject : public rs::Annotation
{
private:
  void initFields()
  {
    rgbImage.init(this, "rgbImage");
    actorName.init(this, "actorName");
    roi.init(this, "roi");
    mask_color_r.init(this, "mask_color_r");
    mask_color_g.init(this, "mask_color_g");
    mask_color_b.init(this, "mask_color_b");
    points.init(this, "points");
  }
public:
  // No description given
  rs::ComplexFeatureStructureEntry<rs::Mat> rgbImage;
  // No description given
  rs::FeatureStructureEntry<std::string> actorName;
  // The ROI of this object in the object mask image space
  rs::ComplexFeatureStructureEntry<rs::ImageROI> roi;
  // Red Color of this object in the object mask
  rs::FeatureStructureEntry<int> mask_color_r;
  // Green Color of this object in the object mask
  rs::FeatureStructureEntry<int> mask_color_g;
  // Blue Color of this object in the object mask
  rs::FeatureStructureEntry<int> mask_color_b;
  // No description given
  rs::ComplexFeatureStructureEntry<rs::ClusterPoints> points;

  SimBeliefStateObject(const SimBeliefStateObject &other) :
      rs::Annotation(other)
  {
    initFields();
  }

  SimBeliefStateObject(uima::FeatureStructure fs) :
      rs::Annotation(fs)
  {
    initFields();
  }
};

/*
 * No description given
 */
class Centroid : public rs::FeatureStructureProxy
{
private:
  void initFields()
  {
    x.init(this, "x");
    y.init(this, "y");
    z.init(this, "z");
  }
public:
  // No description given
  rs::FeatureStructureEntry<float> x;
  // No description given
  rs::FeatureStructureEntry<float> y;
  // No description given
  rs::FeatureStructureEntry<float> z;

  Centroid(const Centroid &other) :
      rs::FeatureStructureProxy(other)
  {
    initFields();
  }

  Centroid(uima::FeatureStructure fs) :
      rs::FeatureStructureProxy(fs)
  {
    initFields();
  }
};

}

TYPE_TRAIT(rs_unreal::SimBeliefStateObject, RS_UNREAL_SIMBS_SIMBELIEFSTATEOBJECT)
TYPE_TRAIT(rs_unreal::Centroid, RS_UNREAL_SIMBS_CENTROID)

#endif /* __SIMBS_TYPES_H__ */
